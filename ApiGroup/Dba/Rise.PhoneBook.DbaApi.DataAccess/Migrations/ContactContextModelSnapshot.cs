// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Rise.PhoneBook.DbaApi.DataAccess.Concrete;

#nullable disable

namespace Rise.PhoneBook.DbaApi.DataAccess.Migrations
{
    [DbContext(typeof(ContactContext))]
    partial class ContactContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Rise.PhoneBook.DbaApi.Entities.Concrete.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Company")
                        .HasMaxLength(350)
                        .HasColumnType("character varying(350)")
                        .HasColumnName("company");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("firstname");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("lastname");

                    b.HasKey("Id");

                    b.ToTable("contacts");
                });

            modelBuilder.Entity("Rise.PhoneBook.DbaApi.Entities.Concrete.ContactInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("ContactId")
                        .HasColumnType("uuid")
                        .HasColumnName("contact_id");

                    b.Property<int>("ContactTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("contact_type_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on");

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("info");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.HasIndex("ContactTypeId");

                    b.ToTable("contact_infos");
                });

            modelBuilder.Entity("Rise.PhoneBook.DbaApi.Entities.Concrete.ContactType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("type_name");

                    b.Property<string>("TypeVal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("type_val");

                    b.HasKey("Id");

                    b.ToTable("contact_types");
                });

            modelBuilder.Entity("Rise.PhoneBook.DbaApi.Entities.Concrete.ContactInfo", b =>
                {
                    b.HasOne("Rise.PhoneBook.DbaApi.Entities.Concrete.Contact", "Contact")
                        .WithMany("ContactInfos")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_contact");

                    b.HasOne("Rise.PhoneBook.DbaApi.Entities.Concrete.ContactType", "ContactType")
                        .WithMany("ContactInfos")
                        .HasForeignKey("ContactTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_contact_type");

                    b.Navigation("Contact");

                    b.Navigation("ContactType");
                });

            modelBuilder.Entity("Rise.PhoneBook.DbaApi.Entities.Concrete.Contact", b =>
                {
                    b.Navigation("ContactInfos");
                });

            modelBuilder.Entity("Rise.PhoneBook.DbaApi.Entities.Concrete.ContactType", b =>
                {
                    b.Navigation("ContactInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
